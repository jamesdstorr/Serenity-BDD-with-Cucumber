name: CI Pipeline

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

permissions:
  contents: write        # Required for Release Please to create branches and PRs
  pull-requests: write  # Required for Release Please to create PRs
  pages: write           # Required for GitHub Pages deployment

jobs:
  bdd-tests:
    name: Execute BDD Tests with Serenity
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Display Java Version
        run: java -version

      - name: Display Maven Version
        run: mvn -version

      - name: Run BDD Tests
        run: mvn clean verify -Dtest=com.jamesstorr.jokes_service.bdd.runner.SpringRunnerTests

      - name: Compress Serenity Reports
        run: |
          cd target/site/serenity
          zip -r ../../../serenity-test-reports.zip .  # Zip contents of 'serenity' directory

      - name: Archive Serenity Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Serenity-Test-Reports
          path: target/serenity-test-reports.zip
          retention-days: 3  # Optional: Set artifact retention period

      # Optional: Publish Test Results Using JUnit Reporter
      - name: Publish Test Results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Serenity BDD Tests
          path: target/surefire-reports/*.xml  # Ensure this path matches your JUnit reports
          reporter: junit-xml

      # Optional: Notify Slack on Failure
      # - name: Send Slack Notification on Failure
      #   if: failure()
      #   uses: slackapi/slack-github-action@v1.23.0
      #   with:
      #     payload: |
      #       {
      #         "text": "BDD Tests Failed in <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|this run>."
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    needs: bdd-tests
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Release Please Action
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: 'java'  # Specifies Java project
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          DEBUG: 'release-please*'  # Optional: Enable debug logging

      # Optional: Automatically Merge Release PR
      # - name: Automatically Merge Release PR
      #   if: success()
      #   uses: actions/auto-merge@v2
      #   with:
      #     github_token: ${{ secrets.RELEASE_PLEASE_
